//gradle脚本自身需要使用的资源
buildscript {
    repositories {
        mavenLocal()
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        jcenter()
        mavenCentral()
        maven {
            url "http://dl.bintray.com/kotlin/kotlin"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'http://oss.jfrog.org/artifactory/oss-snapshot-local'
        }

    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"

        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"

        classpath "org.akhikhl.gretty:gretty:${gretty_version}"

        classpath "gradle.plugin.aspectj:gradle-aspectj:0.1.6"
    }
}

// 所有工程
allprojects{
    group 'net.jkcode.jksoa'
    version '1.0-SNAPSHOT'
}

// 子工程
subprojects{
    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'maven'

    sourceCompatibility = jvm_version
    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjvm-default=enable"]
            jvmTarget = jvm_version
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjvm-default=enable"]
            jvmTarget = jvm_version
        }
    }

    repositories {
        mavenLocal()
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenCentral()
        maven {
            url "http://dl.bintray.com/kotlin/kotlin"
        }
        maven {
            url "https://repository.apache.org/content/repositories/releases"
        }
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap'
        }
    }

    sourceSets {
        main {
            java {
                srcDirs = ['src/main/java', 'src/main/kotlin']
            }
            resources {
                srcDirs = ['src/main/resources']
            }
        }
        test {
            java {
                srcDirs = ['src/test/java', 'src/test/kotlin']
            }
            resources {
                srcDirs = ['src/test/resources']
            }
        }
    }

    // 复制jar
    task copyLib(type: Copy) {
        into "${buildDir}/${project.name}/libs"
        from configurations.runtime
        from "${buildDir}/libs/${project.name}-${project.version}.jar"
    }

    // 复制start.sh
    task copyStartSh(type: Copy) {
        into "${buildDir}/${project.name}"
        from "start-server.sh"
        from "start-client.sh"
    }

    // 复制配置文件
    task copyConf(type: Copy) {
        into "${buildDir}/${project.name}/conf"
        from sourceSets.main.resources
        from project(":common").sourceSets.main.resources
    }

    // 打包
    if (project.name != "common" && project.hasProperty("all")){
        build.finalizedBy(copyLib)
        build.dependsOn(copyStartSh)
        build.dependsOn(copyConf)
    }
}
